import org.gradle.internal.os.OperatingSystem

pluginManagement {
  repositories {
    mavenLocal()
    gradlePluginPortal()
    String frcYear = '2022'
    File frcHome
    if (OperatingSystem.current().isWindows()) {
      String publicFolder = System.getenv('PUBLIC')
      if (publicFolder == null) {
        publicFolder = "C:\\Users\\Public"
      }
      def homeRoot = new File(publicFolder, "wpilib")
      frcHome = new File(homeRoot, frcYear)
    } else {
      def userFolder = System.getProperty("user.home")
      def homeRoot = new File(userFolder, "wpilib")
      frcHome = new File(homeRoot, frcYear)
    }
    def frcHomeMaven = new File(frcHome, 'maven')
    maven {
      name 'frcHome'
      url frcHomeMaven
    }
  }
}

include(":TigerLib")

rootProject.children.each {
  setUpChildProject(it)
}

private void setUpChildProject(ProjectDescriptor project) {
  /*
   * Instead of every file being named build.gradle.kts we instead use the name ${project.name}.gradle.kts.
   * This is much nicer for searching for the file in your IDE.
   */
  final String groovyName = "${project.name}.gradle"
  final String kotlinName = "${project.name}.gradle.kts"
  project.buildFileName = groovyName
  if (!project.buildFile.isFile()) {
    project.buildFileName = kotlinName
  }
  assert project.buildFile.isFile(): "File named $groovyName or $kotlinName must exist."
  project.children.each { setUpChildProject(it) }
}
